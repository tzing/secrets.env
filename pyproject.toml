[tool.poetry]
name = "secrets.env"
version = "0.12.2"
description = "Put secrets from Vault to environment variables"
authors = ["tzing <tzingshih@gmail.com>"]
license = "MIT"
readme = "Readme.md"
repository = "https://github.com/tzing/secrets.env"
keywords = ["vault", "environment variables"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: Utilities",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/tzing/secrets.env/issues"

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.1.3"
hvac = "^0.11.2"
keyring = "^23.3.0"
requests = "^2.21.0"
tomli = {version = ">=1.1.0,<3", python = "<3.11", optional = true}
PyYAML = {version = ">=5.1.2,<7", optional = true}

[tool.poetry.group.dev.dependencies]
poetry = "^1.2.1"
poetry-bumpversion = "^0.2.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
responses = "^0.21.0"

[tool.poetry.group.lint.dependencies]
flake8 = "^5.0.4"
flake8-black = "^0.3.3"
flake8-isort = "^4.2.0"
flake8-pytest-style = "^1.6.0"
flake8-cognitive-complexity = "^0.1.0"
flake8-comprehensions = "^3.10.0"
flake8-bugbear = "^22.9.11"

[tool.poetry.group.doc.dependencies]
Sphinx = "^5.3.0"
pydata-sphinx-theme = "^0.10.1"
sphinx-autobuild = "^2021.3.14"
sphinx-code-tabs = "^0.5.3"

[tool.poetry.extras]
all = [
    "PyYAML",
    "tomli",
]
toml = ["tomli"]
yaml = ["PyYAML"]

[tool.poetry.scripts]
"secrets.env" = "secrets_env.cli:main"

[tool.poetry.plugins."poetry.application.plugin"]
poetry-secrets-env-plugin = "secrets_env.poetry:SecretsEnvPlugin"

[tool.poetry_bumpversion.file]
"secrets_env/__init__.py" = {}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--cov=secrets_env --cov-report=term-missing"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if typing.TYPE_CHECKING",
]
