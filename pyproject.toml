[project]
name = "secrets.env"
version = "1.0.5"
description = "Connect the credential store to your app"
authors = [{ name = "tzing", email = "tzingshih@gmail.com" }]
license = { text = "Apache-2.0" }
readme = "Readme.pypi.rst"
requires-python = ">3.9.2,<4.0"
keywords = ["vault", "environment variable"]
dependencies = [
    "click (>=8.1.3,<9.0.0)",
    "eval-type-backport (>=0.1.3,<0.2.0) ; python_version < \"3.10\"",
    "httpx (>=0.23.1,<0.29.0)",
    "pydantic (>=2.0.3)",
    "tomli (>=1.1.0,<3.0.0) ; python_version < \"3.11\"",
]
dynamic = ["classifiers"]

[project.urls]
repository = "https://github.com/tzing/secrets.env"
documentation = "https://secrets-env.readthedocs.io/"

[project.optional-dependencies]
all = [
    "cryptography (>=42.0.5,<45.0.0)",
    "keyring (>=23.3.0,<26.0.0)",
    "pexpect (>=4.9.0)",
    "pyyaml (>=5.1.2,<7.0.0)",
    "shellingham (>=1.5.4)",
]
keyring = ["keyring (>=23.3.0,<26.0.0)"]
shell = ["shellingham (>=1.5.4)"]
teleport = ["cryptography (>=42.0.5,<45.0.0)", "pexpect (>=4.9.0)"]
yaml = ["pyyaml (>=5.1.2,<7.0.0)"]

[project.scripts]
"secrets.env" = "secrets_env.console:entrypoint"

[project.entry-points."poetry.application.plugin"]
poetry-secrets-env-plugin = "secrets_env.realms.poetry:SecretsEnvPlugin"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Security",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.group.dev.dependencies]
dirty-equals = "^0.9.0"
poetry = ">=1.2.2,<3.0.0"
pyright = "*"
pytest = "^8.1.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.0.0"
PyYAML = "*"
respx = "^0.22.0"
ruff = "^0.12.11"

# Workaround: Sphinx requires Python 3.10, but we still want to support 3.9
furo = { version = ">=2023.5.20", python = "^3.12" }
sphinx = { version = "^8.0.2", python = "^3.12" }
sphinx-click = { version = "^6.0.0", python = "^3.12" }
sphinx-design = { version = "^0.6.0", python = "^3.12" }

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--cov=secrets_env --cov-report xml"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if typing.TYPE_CHECKING"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "PGH", # pygrep
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "RUF", # ruff checks
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]

[tool.ruff.lint.extend-per-file-ignores]
"secrets_env/console/__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.pyright]
include = ["secrets_env"]

[tool.bumpver]
current_version = "1.0.5"
version_pattern = "MAJOR.MINOR.PATCH[-TAG]"

[tool.bumpver.file_patterns]
"pyproject.toml" = ['version = "{version}"']
"secrets_env/version.py" = ['__version__ = "{version}"']
